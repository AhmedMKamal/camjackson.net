#!/usr/local/bin/node

const moment = require('moment');
const dynasty = require('dynasty')({ accessKeyId: '.', secretAccessKey: '.' }, 'http://localhost:8000');
const Posts = dynasty.table('Posts');

const attrsGet = ['slug', 'posted'];
Posts.scan({attrsGet}).then((posts) => (
  Promise.all(posts.map((post) => (
    Posts.remove({hash: post.slug, range: post.posted})
  )))
)).then(() => (
  Posts.insert({
    slug: 'hello-world',
    posted: moment(Date.now()).format(),
    title: 'Created today',
    text: 'This post was created first, but it has the middle date, so it should show ' +
    'as the second post. \n\n[//]: # (fold) \n\n #### Below the fold'
  })
)).then(() => (
  Posts.insert({
    slug: 'after',
    posted: moment(Date.now()).year(2020).format(),
    title: 'Created in the future',
    text: 'This post was created in the middle, but with a ***future*** date, so it ' +
    'should show as the most recent one. \n\n[//]: # (fold) \n\n > Below the fold'
  })
)).then(() => (
  Posts.insert({
    slug: 'before',
    posted: moment(Date.now()).year(2000).format(),
    title: 'Created in the past',
    text: 'This post was the most recently created one, but with a *really* old date, ' +
    'so you should never see it on the index page.  \n\n[//]: # (fold) \n\n' +
    '**Below the fold**'
  })
));
